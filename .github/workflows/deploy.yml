name: CI/CD Pipeline for user-api

on:
  push:
    branches: [master]

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    env:
      SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USER: ${{ secrets.DEPLOY_USER }}
      EC2_IP: ${{ secrets.EC2_HOST }}
      PROJECT_DIR: /home/ubuntu/test
      BINARY_NAME: user-api
      SERVICE_NAME: myapp.service
      K6_SCRIPT: /home/ubuntu/test/loadtest/script.js  # make sure this path is correct

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          echo "$SSH_KEY" > s.pem
          chmod 400 s.pem

      - name: Pull Latest Code and Backup Current Binary
        run: |
          ssh -i s.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << 'EOF'
            set -e
            cd $PROJECT_DIR

            if [ ! -d ".git" ]; then
              echo "Git repo not found. Cloning..."
              git clone https://github.com/your-username/your-repo.git .
            else
              echo "Pulling latest code..."
              git pull origin master
            fi

            echo "Creating backup of current binary..."
            if [ -f $BINARY_NAME ]; then
              cp $BINARY_NAME ${BINARY_NAME}.bak
            fi
          EOF

      - name: Build and Restart Application with Rollback Support
        run: |
          ssh -i s.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << 'EOF'
            set -e
            cd $PROJECT_DIR

            echo "Installing Go..."
            sudo apt update -y && sudo apt install -y golang-go

            echo "Building new binary..."
            go mod tidy
            go test ./... -v
            go build -o $BINARY_NAME ./cmd/main.go

            echo "Restarting service..."
            if ! sudo systemctl restart $SERVICE_NAME; then
              echo "Service restart failed. Rolling back..."
              if [ -f ${BINARY_NAME}.bak ]; then
                mv ${BINARY_NAME}.bak $BINARY_NAME
                sudo systemctl restart $SERVICE_NAME
                echo "Rollback successful."
              else
                echo "No backup found to rollback."
              fi
              exit 1
            fi

            echo "Deployment successful."
          EOF

      - name: Run Load Test with k6
        run: |
          echo "Running Load Test with k6..."
          ssh -i s.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << 'EOF'
            set -e

            echo "Installing k6 via Snap..."
            sudo apt update -y
            sudo apt install -y snapd
            sudo snap install k6

            echo "Running the load test..."
            k6 run $K6_SCRIPT
          EOF

      - name: Cleanup SSH Key
        run: rm -f s.pem
