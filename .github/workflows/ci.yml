name: CI/CD Pipeline for user-api

on:
  push:
    branches: [master]

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Test and Deploy to EC2
    runs-on: ubuntu-latest

    env:
      SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USER: ${{ secrets.DEPLOY_USER }}
      EC2_IP: ${{ secrets.EC2_HOST }}
      PROJECT_DIR: /home/ubuntu/test
      BINARY_NAME: user-api
      SERVICE_NAME: myapp.service

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Tests
        run: go test ./... -v

      - name: Build Binary
        run: go build -o ${{ env.BINARY_NAME }} ./cmd/main.go

      - name: Setup SSH Key
        run: |
          echo "${{ env.SSH_KEY }}" > s.pem
          chmod 400 s.pem

      - name: Deploy Binary and Restart Service with Rollback
        run: |
          scp -i s.pem -o StrictHostKeyChecking=no ${{ env.BINARY_NAME }} ${{ env.EC2_USER }}@${{ env.EC2_IP }}:${{ env.PROJECT_DIR }}/new-binary

          ssh -i s.pem -o StrictHostKeyChecking=no ${{ env.EC2_USER }}@${{ env.EC2_IP }} << 'EOF'
            set -e
            cd $PROJECT_DIR

            echo "Checking if Go is installed..."
            if ! command -v go &> /dev/null; then
              echo "Installing Go..."
              sudo apt update -y && sudo apt install -y golang-go
            fi

            echo "Backing up current binary..."
            if [ -f $BINARY_NAME ]; then
              mv $BINARY_NAME ${BINARY_NAME}.bak
            fi

            echo "Moving new binary..."
            mv new-binary $BINARY_NAME
            chmod +x $BINARY_NAME

            echo "Restarting service..."
            if ! sudo systemctl restart $SERVICE_NAME; then
              echo "Service failed. Rolling back..."
              if [ -f ${BINARY_NAME}.bak ]; then
                mv ${BINARY_NAME}.bak $BINARY_NAME
                sudo systemctl restart $SERVICE_NAME
                echo "Rollback successful."
              else
                echo "Rollback failed. No backup binary found."
                exit 1
              fi
            else
              echo "Deployment successful."
            fi
          EOF

      - name: Cleanup SSH Key
        run: rm -f s.pem
