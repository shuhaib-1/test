name: CI/CD Pipeline for user-api

on:
  push:
    branches: [master]

jobs:
  deploy:
    name: Run Tests and Deploy to EC2
    runs-on: ubuntu-latest

    env:
      SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_USER: ${{ secrets.DEPLOY_USER }}
      EC2_IP: ${{ secrets.EC2_HOST }}
      PROJECT_DIR: /home/ubuntu/test
      BINARY_NAME: user-api
      SERVICE_NAME: myapp.service

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # Match the Go version to what's on your EC2 server

      - name: Install dependencies
        run: go mod tidy

      - name: Run Unit Tests
        run: go test ./... -v

      - name: Setup SSH Key
        run: |
          echo "$SSH_KEY" > s.pem
          chmod 400 s.pem

      - name: Pull Latest Code and Backup Current Binary on EC2
        run: |
          ssh -i s.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << EOF
            set -e
            cd $PROJECT_DIR

            # Check for go.mod file and initialize if missing
            if [ ! -f "go.mod" ]; then
              echo "go.mod not found, initializing Go modules..."
              go mod init
            fi

            echo "Pulling latest code..."
            git pull origin master

            echo "Creating backup of current binary..."
            if [ -f $BINARY_NAME ]; then
              cp $BINARY_NAME ${BINARY_NAME}.bak
            fi
          EOF

      - name: Build and Restart Application on EC2 with Rollback
        run: |
          ssh -i s.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << 'EOF'
            set -e
            cd $PROJECT_DIR

            echo "Checking for go.mod file..."
            if [ ! -f "go.mod" ]; then
              echo "go.mod not found. Initializing Go module..."
              go mod init
            fi

            echo "Running go mod tidy..."
            go mod tidy

            echo "Building new binary..."
            go build -o $BINARY_NAME ./cmd/main.go

            echo "Restarting service..."
            if ! sudo systemctl restart $SERVICE_NAME; then
              echo "Service restart failed. Rolling back..."
              if [ -f ${BINARY_NAME}.bak ]; then
                mv ${BINARY_NAME}.bak $BINARY_NAME
                sudo systemctl restart $SERVICE_NAME
                echo "Rollback successful."
              else
                echo "No backup found to rollback."
              fi
              exit 1
            fi

            echo "Deployment successful."
          EOF

      - name: Cleanup SSH Key
        run: rm -f s.pem
